name: HUFS CS RAG Bot CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # CI: 코드 검증 및 Docker 이미지 빌드
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          dockerfile: Dockerfile
          image: hyunbinkim00/hufs-cs-ragbot-api
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  # CD: 원격 서버에 Docker 컨테이너 배포
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 이전 컨테이너 정리
            docker pull hufs-cs-ragbot/api:latest
            docker stop hufs-cs-ragbot || true
            docker rm hufs-cs-ragbot || true

            # 새 컨테이너 실행 (볼륨 마운트 및 환경 변수 포함)
            docker run -d \
              --name hufs-cs-ragbot \
              -p 8000:8000 \
              -v /app/data:/app/data \
              -v /app/study_docs:/app/study_docs \
              -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              --restart unless-stopped \
              hufs-cs-ragbot/api:latest

            # 미사용 이미지 정리
            docker system prune -af --volumes
